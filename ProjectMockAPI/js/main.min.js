function addItem(e) {
  let t =
    e.parentElement.parentElement.parentElement.parentElement.parentElement;
  if ("flex" == t.getElementsByClassName("out-of-stock-cover")[0].style.display)
    return;
  let n = t.getElementsByClassName("product-name")[0].innerText,
    a = parseFloat(
      t.getElementsByClassName("product-price")[0].innerText.replace("$ ", "")
    ),
    s = t.getElementsByClassName("product-img")[0].src;
  SwitchBtns(t);
  let i = { name: n, price: a, imgSrc: s, qty: 1 };
  CartItems(i), cartDetails.push(i), RenderCart(), CartItemsTotal();
}
// /////////////////////////////////////// CRUD
function removeItem(e) {
  let t = e.parentElement.getElementsByClassName("name")[0].innerText,
    n = document.getElementsByClassName("product-name");
  cartDetails.forEach((e, a) => {
    if (t == e.name) {
      cartDetails.splice(a, 1);
      for (let e of n)
        if (t == e.innerText) {
          SwitchBtns(e.parentElement.parentElement);
        }
    }
  }),
    RenderCart(),
    CartIsEmpty(),
    CartItemsTotal();
}
// /////////////////////////////////////
function clearCart() {
  ToggleBackBtns(),
    (cartDetails.length = 0),
    RenderCart(),
    CartIsEmpty(),
    CartItemsTotal();
}
// /////////////////////////////////////
function qtyChange(e, t) {
  let n = e.parentElement.parentElement,
    a = n.classList.contains("btn-add")
      ? n.parentElement.parentElement.getElementsByClassName("product-name")[0]
          .innerText
      : n.parentElement.getElementsByClassName("name")[0].innerText,
    s = document.getElementsByClassName("product-name");
  for (let e of s)
    if (a == e.innerText) {
      let s =
        e.parentElement.parentElement.getElementsByClassName("qty-change")[0];
      cartDetails.forEach((e, i) => {
        a == e.name &&
          ("add" == t && e.qty < 10
            ? ((e.qty += 1),
              (n.innerHTML = QtyBtn(e.qty)),
              (s.innerHTML = QtyBtn(e.qty)))
            : "sub" == t
            ? ((e.qty -= 1),
              (n.innerHTML = QtyBtn(e.qty)),
              (s.innerHTML = QtyBtn(e.qty)),
              e.qty < 1 &&
                (cartDetails.splice(i, 1),
                (s.innerHTML = AddBtn()),
                s.classList.toggle("qty-change")))
            : ((document.getElementsByClassName(
                "purchase-cover"
              )[0].style.display = "block"),
              (document.getElementsByClassName("stock-limit")[0].style.display =
                "flex"),
              sideNav(0)));
      });
    }
  RenderCart(), CartIsEmpty(), CartItemsTotal();
}
// /////////////////////////////////////
function limitPurchase(e) {
  (document.getElementsByClassName("purchase-cover")[0].style.display = "none"),
    (e.parentElement.style.display = "none"),
    sideNav(1);
}
// /////////////////////////////////////
function sideNav(e) {
  let t = document.getElementsByClassName("side-nav")[0],
    n = document.getElementsByClassName("cover")[0];
  (t.style.right = e ? "0" : "-100%"),
    (n.style.display = e ? "block" : "none"),
    CartIsEmpty();
}
// /////////////////////////////////////
function buy(e) {
  0 != cartDetails.length &&
    (sideNav(!e),
    (document.getElementsByClassName("purchase-cover")[0].style.display = e
      ? "block"
      : "none"),
    (document.getElementsByClassName("order-now")[0].innerHTML = e
      ? Purchase()
      : ""));
}
// /////////////////////////////////////
function order() {
  let e = document.getElementsByClassName("invoice")[0];
  (e.style.height = "500px"),
    (e.style.width = "400px"),
    (e.innerHTML = OrderConfirm()),
    ToggleBackBtns(),
    Stocks(),
    clearCart();
}
// /////////////////////////////////////
function okay(e) {
  let t = document.getElementsByClassName("invoice")[0];
  "continue" == e.target.innerText
    ? ((t.style.display = "none"),
      (document.getElementsByClassName("purchase-cover")[0].style.display =
        "none"))
    : ((e.target.innerText = "continue"),
      (e.target.parentElement.getElementsByClassName(
        "order-details"
      )[0].innerHTML =
        "<em class='thanks'>Cảm ơn bạn đã mua hàng của chúng tôi!</em>"),
      (t.style.height = "180px"));
}
function AddBtn() {
  return "\n  <div>\n    <button onclick='addItem(this)' class='add-btn'>Add <i class='fas fa-chevron-right'></i></button>\n  </div>";
}
// /////////////////////////////////////
function QtyBtn(e = 1) {
  return 0 == e
    ? AddBtn()
    : `
    \n  <div>
    \n    <button class='btn-qty' onclick="qtyChange(this,'sub')"><i class='fas fa-chevron-left'></i></button>
    \n    <p class='qty'>${e}</p>
    \n    <button class='btn-qty' onclick="qtyChange(this,'add')"><i class='fas fa-chevron-right'></i></button>
    \n  </div>`;
}
// /////////////////////////////////////
function Product(e = {}) {
  let {
    name: t,
    price: n,
    img: a,
    screen: s,
    desc: i,
    backCamera: b,
    frontCamera: f,
  } = e;
  return `
  \n  <div class='card'>
  \n    <div class='top-bar'>
  \n      <i class="fas fa-bookmark"></i>
  \n    </div>
  \n    <div class='img-container'>
  \n      <img class='product-img' src='${a}' alt='' />
  \n      <div class='out-of-stock-cover'><span>Out Of Stock</span></div>
  \n    </div>
  \n    <div class='details'>
  \n      <div class='name-fav'>
  \n        <strong class='product-name'>${t}</strong>
  \n        <button onclick='this.classList.toggle("fav")' class='heart'><i class='fas fa-heart'></i></button>
  \n      </div>
  \n      <div class='wrapper'>
  \n        <h5>${s}</h5>
  \n        <p>${i}</p>
  \n        <p>Back Camera: ${b}</p>
  \n        <p>Front Camera:${f}</p>
  \n      </div>
  \n      <div class='purchase'>
  \n        <p class='product-price'>$ ${n}</p>
  \n        <span class='btn-add'>${AddBtn()}</span>
  \n      </div>
  \n    </div>
  \n  </div>`;
}
// /////////////////////////////////////
function CartItems(e = {}) {
  let { name: t, price: n, imgSrc: a, qty: s } = e;
  return `
  \n  <div class='cart-item'>
  \n    <div class='cart-img'>
  \n      <img src='${a}' alt='' />
  \n    </div>
  \n    <strong class='name'>${t}</strong>
  \n    <span class='qty-change'>${QtyBtn(s)}</span>
  \n    <p class='price'>$ ${n * s}</p>
  \n    <button onclick='removeItem(this)'><i class='fas fa-trash'></i></button>
  \n  </div>`;
}
// /////////////////////////////////////
function Banner() {
  return `
  \n  <div class='banner'>
  \n   
  \n    <div class='filter-main'>
  \n      <select>
  \n        <option>SamSung</option>
  \n        <option>Iphone</option>
  \n      </select>
  \n    </div>
  \n    <div class='main-cart'>${DisplayProducts()}</div>
  \n  
  \n    <div class='nav'>
  \n      <button onclick='sideNav(1)'><i class='fas fa-shopping-cart' style='font-size:2rem;'></i></button>
  \n      <span class= 'total-qty'>0</span>
  \n    </div>
  \n    <div onclick='sideNav(0)' class='cover'></div>
  \n    <div class='cover purchase-cover'></div>
  \n    <div class='cart'>${CartSideNav()}</div>
  \n    <div class='stock-limit'>
  \n      <em>Bạn chỉ có mua duy nhất 10 vật phẩm cho mỗi sản phẩm!</em>
  \n      <button class='btn-ok' onclick='limitPurchase(this)'>Okay</button>
  \n    </div>
  \n  <div  class='order-now'></div>
  \n  </div>`;
}
// /////////////////////////////////////
function CartSideNav() {
  return "\n  <div class='side-nav'>\n    <button onclick='sideNav(0)'><i class='fas fa-times'></i></button>\n    <h2>Cart</h2>\n    <div class='cart-items'></div>\n    <div class='final'>\n      <strong>Total: $ <span class='total'>0</span></strong>\n      <div class='action'>\n        <button onclick='buy(1)' class='btn buy'>Purchase <i class='fas fa-credit-card' style='color:#6665dd;'></i></button>\n        <button onclick='clearCart()' class='btn clear'>Clear Cart <i class='fas fa-trash' style='color:#bb342f;'></i></button>\n      </div>\n    </div>\n  </div>";
}
// /////////////////////////////////////
function Purchase() {
  let e = document.getElementsByClassName("total")[0].innerText,
    t = cartDetails.map((e) => `<span>${e.qty} x ${e.name}</span>`),
    n = cartDetails.map((e) => `<span>$ ${e.price * e.qty}</span>`);
  return `
  \n  <div class='invoice'>
  \n    <div class='shipping-items'>
  \n      <div class='item-names'>${t.join("")}</div>
  \n      <div class='items-price'>${n.join("+")}</div>
  \n    </div>
  \n  <hr>
  \n    <div class='payment'>
  \n      <em>payment</em>
  \n      <div>
  \n        <p>total amount to be paid:</p><span class='pay'>$ ${e}</span>
  \n      </div>
  \n    </div>
  \n    <div class='order'>
  \n      <button onclick='order()' class='btn-order btn'>Order Now</button>
  \n      <button onclick='buy(0)' class='btn-cancel btn'>Cancel</button>
  \n    </div>
  \n  </div>`;
}
// /////////////////////////////////////
function OrderConfirm() {
  return `
  \n  <div>
  \n    <div class='order-details'>
  \n      <em>Hóa đơn của bạn đã được vận chuyển</em>
  \n      <p>Số Hóa Đơn : <span>${Math.round(1e3 * Math.random())}</span></p>
  \n      <p>Đơn đặt hàng của bạn sẽ được giao cho bạn trong 3-5 ngày tới</p>
  \n      <p>Bạn có thể chi trả <span>$ ${
    document.getElementsByClassName("total")[0].innerText
  }</span> Bằng thẻ hoặc bất kỳ phương thức giao dịch trực tuyến nào sau khi sản phẩm đã được phân phối cho bạn</p>
  \n    </div>
  \n    <button onclick='okay(event)' class='btn-ok'>okay</button>
  \n  </div>`;
}
// /////////////////////////////////////
function DisplayProducts() {
  return productDetails.map((e) => Product(e)).join("");
}
// /////////////////////////////////////
function DisplayCartItems() {
  return cartDetails.map((e) => CartItems(e)).join("");
}
// /////////////////////////////////////
function RenderCart() {
  document.getElementsByClassName("cart-items")[0].innerHTML =
    DisplayCartItems();
}
// /////////////////////////////////////
function SwitchBtns(e) {
  let t = e.getElementsByClassName("btn-add")[0];
  t.classList.toggle("qty-change");
  let n = t.classList.contains("qty-change");
  e.getElementsByClassName("btn-add")[0].innerHTML = n ? QtyBtn() : AddBtn();
}
// /////////////////////////////////////
function ToggleBackBtns() {
  let e = document.getElementsByClassName("btn-add");
  for (let t of e)
    t.classList.contains("qty-change") && t.classList.toggle("qty-change"),
      (t.innerHTML = AddBtn());
}
// /////////////////////////////////////
function CartIsEmpty() {
  0 == cartDetails.length &&
    (document.getElementsByClassName("cart-items")[0].innerHTML =
      "<span class='empty-cart'>Giỏ Trống</span>");
}
// /////////////////////////////////////
function CartItemsTotal() {
  let e = cartDetails.reduce((e, t) => e + t.price * t.qty, 0),
    t = cartDetails.reduce((e, t) => e + t.qty, 0);
  (document.getElementsByClassName("total")[0].innerText = e),
    (document.getElementsByClassName("total-qty")[0].innerText = t);
}
// /////////////////////////////////////
function Stocks() {
  cartDetails.forEach((e) => {
    productDetails.forEach((t) => {
      e.name == t.name &&
        t.qty >= 0 &&
        ((t.qty -= e.qty),
        t.qty < 0
          ? ((t.qty += e.qty),
            (document.getElementsByClassName("invoice")[0].style.height =
              "180px"),
            (document.getElementsByClassName("order-details")[0].innerHTML =
              "<em class='thanks'>Đã vượt quá giới hạn hàng tồn kho</em>"))
          : 0 == t.qty
          ? OutOfStock(t, 1)
          : t.qty <= 5 && OutOfStock(t, 0));
    });
  });
}
// /////////////////////////////////////
function OutOfStock(e, t) {
  let n = document.getElementsByClassName("card");
  for (let a of n) {
    let n = a.getElementsByClassName("stocks")[0],
      s = a.getElementsByClassName("product-name")[0].innerText;
    e.name == s &&
      (t
        ? ((a.getElementsByClassName("out-of-stock-cover")[0].style.display =
            "flex"),
          (n.style.display = "none"))
        : ((n.innerText = "Only Few Left"), (n.style.color = "orange")));
  }
}
// /////////////////////////////////////
function App() {
  return `\n  <div>\n    ${Banner()}\n  </div>`;
}
// /////////////////////////////////////
const productDetails = [
  {
    name: "iphoneX",
    price: "1000",
    screen: "screen 68",
    backCamera: "2 camera 12 MP",
    frontCamera: "7 MP",
    img: "https://cdn.tgdd.vn/Products/Images/42/114115/iphone-x-64gb-hh-600x600.jpg",
    desc: "Thiết kế mang tính đột phá",
    type: "iphone",
  },
  {
    name: "Samsung Galaxy M51 ",
    price: "3500",
    screen: "screen 69",
    backCamera: " Chính 64 MP & Phụ 12 MP, 5 MP, 5 MP",
    frontCamera: " 32 MP",
    img: "https://cdn.tgdd.vn/Products/Images/42/217536/samsung-galaxy-m51-trang-new-600x600-600x600.jpg",
    desc: '"Thiết kế đột phá, màn hình tuyệt đỉnh"',
    type: "Samsung",
  },
  {
    name: "Samsung Galaxy M22",
    price: "45000",
    screen: "screen 70",
    backCamera: "Chính 12 MP & Phụ 64 MP, 12 MP",
    frontCamera: " 32 MP",
    img: "https://cdn.tgdd.vn/Products/Images/42/217536/samsung-galaxy-m51-trang-new-600x600-600x600.jpg",
    desc: "Thiết kế mang tính đột phá",
    type: "Samsung",
  },
  {
    name: "Iphone 11",
    price: "1000",
    screen: "screen 54",
    backCamera: "Camera: Chính 12 MP & Phụ 64 MP, 12 MP",
    frontCamera: "32 MP",
    img: "https://didongviet.vn/pub/media/catalog/product//i/p/iphone-11-pro-max-256gb-didongviet_23.jpg",
    desc: "Thiết kế đột phá, màn hình tuyệt đỉnh",
    type: "Iphone",
  },
];
cartDetails = [];
document.getElementById("app").innerHTML = App();
